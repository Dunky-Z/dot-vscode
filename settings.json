{
    "C_Cpp.clang_format_style": "file",
    "C_Cpp.dimInactiveRegions": false,
    "C_Cpp.errorSquiggles": "disabled",
    "cmake.configureOnOpen": false,
    "editor.formatOnPaste": false,
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    // 关闭 C/C++ Extension Pack 插件的提示 防止其与 clangd 冲突
    // "C_Cpp.intelliSenseEngineFallback": "disabled",
    "C_Cpp.intelliSenseEngine": "disabled",
    "C_Cpp.autocomplete": "disabled", // So you don't get autocomplete from both extensions.
    // 指向 clangd 路径
    "clangd.path": "/usr/bin/clangd",
    "clangd.arguments": [
        // compelie_commands.json 文件的目录位置
        "--compile-commands-dir=/home/nic/develop/100ask_stm32mp157_pro-sdk/Linux-5.4/compile_commands.json",
        // 让 Clangd 生成更详细的日志
        "--log=verbose",
        // 输出的 JSON 文件更美观
        "--pretty",
        // 全局补全
        "--all-scopes-completion",
        // 建议风格：打包 (重载函数只会给出一个建议）相反可以设置为 detailed
        "--completion-style=bundled",
        // 跨文件重命名变量
        "--cross-file-rename",
        // 允许补充头文件
        "--header-insertion=iwyu",
        // 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
        "--header-insertion-decorators",
        // 在后台自动分析文件 基于 complie_commands
        "--background-index",
        // 启用 Clang-Tidy 以提供「静态检查」
        "--clang-tidy",
        // Clang-Tidy 静态检查的参数，指出按照哪些规则进行静态检查
        // 参数后部分的*表示通配符
        // 在参数前加入-，如-modernize-use-trailing-return-type，将会禁用某一规则
        "--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
        // 默认格式化风格：谷歌开源项目代码指南
        "--fallback-style=LLVM",
        // 同时开启的任务数量
        "-j=2",
        // pch 优化的位置 (memory 或 disk，选择 memory 会增加内存开销，但会提升性能)
        "--pch-storage=memory",
        // 启用这项时，补全函数时，将会给参数提供占位符
        // 我选择禁用
        "--function-arg-placeholders=false",
    ],
}