{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2fpga",
            "command": "python",
            "args": [
                "tool/bootromBuildTest.py",
                "--rebuild",
                "btr2fpga",
                "2>btr2fpga.log"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2fpga --simulate zebu",
            "command": "python3",
            "args": [
                "tool/bootromBuildTest.py",
                "--rebuild",
                "btr2fpga",
                "--simulate",
                "zebu"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2fpga --simulate zebu output asm",
            "dependsOn": [
                "Rebuild BootRom btr2fpga --simulate zebu"
            ],
            "command": "riscv64-unknown-elf-objdump",
            "args": [
                "-S",
                "btr_test.elf",
                ">btr_test.asm"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom/build/fpga_build"
            }
        },
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2qemu",
            "command": "python",
            "args": [
                "tool/bootromBuildTest.py",
                "--rebuild",
                "btr2qemu",
                "2>btr2qemu.log"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Codesize",
            "command": "python",
            "args": [
                "codesize.py"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/"
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "Remake BootRom btr2fpga",
            "command": "python3",
            "args": [
                "tool/bootromBuildTest.py",
                "--remake",
                "btr2fpga"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Remake BootRom btr2fpga --simulate zebu",
            "command": "python3",
            "args": [
                "tool/bootromBuildTest.py",
                "--remake",
                "btr2fpga",
                "--simulate",
                "zebu"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2fpga --simulate fpga",
            "command": "python3",
            "args": [
                "tool/bootromBuildTest.py",
                "--rebuild",
                "btr2fpga",
                "--simulate",
                "fpga"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Remake BootRom btr2fpga --simulate fpga",
            "command": "python3",
            "args": [
                "tool/bootromBuildTest.py",
                "--remake",
                "btr2fpga",
                "--simulate",
                "fpga"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Upload to VCS",
            "command": "python3",
            "args": [
                "tool/vcsSimulate.py"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "Rebuild BootRom btr2qemu --simulate qemu",
            "command": "python",
            "args": [
                "tool/bootromBuildTest.py",
                "--rebuild",
                "btr2qemu",
                "--simulate",
                "qemu"
            ],
            "options": {
                "cwd": "/home/nic/develop/bootrom/bootrom"
            }
        },
        {
            "type": "shell",
            "label": "(RISCV)Run Qemu Server BootRom",
            "command": "/home/nic/develop/bootrom/qemu/build/qemu-system-riscv32",
            "args": [
                "-nographic",
                "-machine",
                "sifive_e",
                "-kernel",
                "/home/nic/develop/bootrom/bootrom/build/qemu_build/btr_test.elf",
                "-s",
                "-S"
            ],
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "(RISCV)Run Qemu  BootRom",
            "command": "/home/nic/develop/bootrom/qemu/build/qemu-system-riscv32",
            "args": [
                "-nographic",
                "-machine",
                "sifive_e",
                "-kernel",
                "/home/nic/develop/bootrom/bootrom/build/qemu_build/btr_test.elf"
            ],
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "Kill Qemu Server(RISCV)",
            "command": "ps -C qemu-* --no-headers | cut -d \\  -f 1 | xargs pkill -9"
        },
        {
            "type": "shell",
            "label": "Kill Qemu",
            "command": "pkill -9 qemu"
        },
        {
            "type": "shell",
            "label": "Upload nsign image to zebu",
            "command": "./zebu.sh",
            "options": {
                "cwd": "/home/nic/develop/bootrom/nsign/test/output/emmc_usb_spi"
            }
        },
        {
            "type": "shell",
            "label": "Upload Linux Image to zebu",
            "command": "./putscript_zebu_dual_die.sh",
            "options": {
                "cwd": "/home/nic/develop/ucore-dev/uCore-Tutorial-Code-2023S"
            }
        },
        {
            "type": "shell",
            "label": "(uCore)Make User",
            "command": "make",
            "args": [
                "test",
                "user"
            ],
            "options": {
                "cwd": "/home/nic/develop/ucore-dev/uCore-Tutorial-Code-2023S"
            }
        },
        {
            "type": "shell",
            "label": "(uCore)Run QEMU",
            "command": "make",
            "args": [
                "debug_vscode"
            ],
            "options": {
                "cwd": "/home/nic/develop/ucore-dev/uCore-Tutorial-Code-2023S"
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "(uCore)Make Clean",
            "command": "make",
            "args": [
                "clean"
            ],
            "options": {
                "cwd": "/home/nic/develop/ucore-dev/uCore-Tutorial-Code-2023S"
            }
        },
        {
            "type": "shell",
            "label": "(EIC7702)delete fitImage in tftp",
            "command": "rm",
            "args": [
                "fitImage"
            ],
            "options": {
                "cwd": "/tftproot"
            }
        },
        {
            "label": "(EIC7702)delete es-m2-demo and tty-demo in tftp",
            "type": "shell",
            "command": "rm",
            "args": [
                "es-m2-demo",
                "tty-demo"
            ],
            "options": {
                "cwd": "/tftproot"
            },
            "problemMatcher": [],
            "description": "Deletes es-m2-demo and tty-demo files from the tftp root directory."
        },
        {
            "label": "(EIC7702)cp es-m2-demo and tty-demo to tftp",
            "type": "shell",
            "dependsOn": [
                "(EIC7702)delete es-m2-demo and tty-demo in tftp"
            ],
            "command": "bash",
            "args": [
                "-c",
                "cp output/build/es-m2-demo/es-m2-demo output/build/es-m2-demo/tty-demo /tftproot/"
            ],
            "options": {
                "cwd": "/home/user/win2030/win2030/buildroot"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Copies es-m2-demo and tty-demo binaries to the tftp root directory."
        },
        {
            "type": "shell",
            "label": "(EIC7702)cp fitImage to tftp",
            "dependsOn": [
                "(EIC7702)delete fitImage in tftp"
            ],
            "command": "cp",
            "args": [
                "output/images/fitImage",
                "/tftproot"
            ],
            "options": {
                "cwd": "/home/user/win2030/win2030/buildroot"
            }
        },
        {
            "type": "shell",
            "label": "(EIC7702)cp ipcm_drv.ko to tftp",
            "command": "cp",
            "args": [
                "output/build/es-ipcm-driver/ipcm_drv.ko",
                "/tftproot"
            ],
            "options": {
                "cwd": "/home/user/win2030/win2030/buildroot"
            }
        },
        {
            "type": "shell",
            "label": "(EIC7702)delete rootfs.ext4 in tftp",
            "command": "rm",
            "args": [
                "rootfs.ext4"
            ],
            "options": {
                "cwd": "/tftproot"
            }
        },
        {
            "type": "shell",
            "label": "(EIC7702)cp rootfs.ext4 to tftp",
            "command": "cp",
            "dependsOn": [
                "(EIC7702)delete rootfs.ext4 in tftp"
            ],
            "args": [
                "output/images/rootfs.ext4",
                "/tftproot"
            ],
            "options": {
                "cwd": "/home/user/win2030/win2030/buildroot"
            }
        },
    ]
}